apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web-004-1
spec:
  serviceName: web-004-h               # tie to the headless service
  replicas: 2
  selector:
    matchLabels:
      app: web-004-1
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: web-004-1                   # <-- matches Services
    spec:
      # No toleration -> will not schedule on tainted control-plane
      securityContext:
        fsGroup: 101                   # nginx user in alpine; helps write to the volume
      initContainers:
        - name: init-index
          image: busybox:1.36
          command: ["sh","-c"]
          args:
            - 'echo "Hello from $(hostname)" > /usr/share/nginx/html/index.html'
          volumeMounts:
            - name: www
              mountPath: /usr/share/nginx/html
      containers:
        - name: nginx
          image: nginx:1.27-alpine
          ports:
            - { name: http, containerPort: 80 }
          readinessProbe:
            httpGet: { path: "/", port: 80 }
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            httpGet: { path: "/", port: 80 }
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 2
            failureThreshold: 3
          volumeMounts:
            - name: www
              mountPath: /usr/share/nginx/html
  volumeClaimTemplates:
    - metadata:
        name: www
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: local-storage
        resources:
          requests:
            storage: 1Gi

