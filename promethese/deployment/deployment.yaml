apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: prometheus-1759788822
    meta.helm.sh/release-namespace: default
  creationTimestamp: "2025-10-06T22:13:53Z"
  generation: 1
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: prometheus-1759788822
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: prometheus
    app.kubernetes.io/version: 3.5.0
    helm.sh/chart: prometheus-2.1.23
  name: prometheus-1759788822-server
  namespace: default
  resourceVersion: "516634"
  uid: 82083028-3431-4e18-9720-503f8e05a420
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: server
      app.kubernetes.io/instance: prometheus-1759788822
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/configmap: 3487e3e4c04c441bf167fb7d21fc22d1c38e636b12cf1c7a74fb42756219c4a0
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: prometheus-1759788822
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: prometheus
        app.kubernetes.io/part-of: prometheus
        app.kubernetes.io/version: 3.5.0
        helm.sh/chart: prometheus-2.1.23
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: server
                  app.kubernetes.io/instance: prometheus-1759788822
                  app.kubernetes.io/name: prometheus
              topologyKey: kubernetes.io/hostname
            weight: 1
      automountServiceAccountToken: true
      containers:
      - args:
        - --config.file=/opt/bitnami/prometheus/conf/prometheus.yaml
        - --storage.tsdb.path=/bitnami/prometheus/data
        - --storage.tsdb.retention.time=10d
        - --storage.tsdb.retention.size=0
        - --log.level=info
        - --log.format=logfmt
        - --web.listen-address=:9090
        - --web.console.libraries=/opt/bitnami/prometheus/conf/console_libraries
        - --web.console.templates=/opt/bitnami/prometheus/conf/consoles
        - --web.route-prefix=/
        image: docker.io/bitnamilegacy/prometheus:3.5.0-debian-12-r3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 3
        name: prometheus
        ports:
        - containerPort: 9090
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /-/ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 2
        resources:
          limits:
            cpu: 150m
            ephemeral-storage: 2Gi
            memory: 192Mi
          requests:
            cpu: 100m
            ephemeral-storage: 50Mi
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 1001
          runAsNonRoot: true
          runAsUser: 1001
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp
          name: empty-dir
          subPath: tmp-dir
        - mountPath: /opt/bitnami/prometheus/conf
          name: config
          readOnly: true
        - mountPath: /bitnami/prometheus/data
          name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
        fsGroupChangePolicy: Always
      serviceAccount: prometheus-1759788822-server
      serviceAccountName: prometheus-1759788822-server
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: empty-dir
      - configMap:
          defaultMode: 420
          name: prometheus-1759788822-server
        name: config
      - emptyDir: {}
        name: data
status:
  conditions:
  - lastTransitionTime: "2025-10-06T22:13:54Z"
    lastUpdateTime: "2025-10-06T22:13:54Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - lastTransitionTime: "2025-10-06T22:32:10Z"
    lastUpdateTime: "2025-10-06T22:32:10Z"
    message: ReplicaSet "prometheus-1759788822-server-7ff4bf6c" has timed out progressing.
    reason: ProgressDeadlineExceeded
    status: "False"
    type: Progressing
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
